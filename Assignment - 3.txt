1.CREATE DEFINER=`root`@`localhost` PROCEDURE `assigment3_pro1`(month1 varchar(20), year1 int)
  BEGIN
  select orderDate,status from orders where year(orderdate)=year1 and left(monthname(orderdate),3)=month1;
  END

call assigment3_pro1('Feb',2003);


2.CREATE DEFINER=`root`@`localhost` PROCEDURE `assigment3_pro2`()
  BEGIN
  create table if not exists cancellations(id int primary key auto_increment,ordernumber int,foreign key(orderNumber) references orders(orderNumber),customernumber int,foreign key(customerNumber) references customers(customerNumber));
  insert into cancellations(customernumber,orderNumber)
  select customerNumber,orderNumber from orders where status='Cancelled' ;
  END


call assigment3_pro2


3.a CREATE DEFINER=`root`@`localhost` FUNCTION `pur_stat`(cid int) RETURNS varchar(20) CHARSET utf8mb4
    DETERMINISTIC
    BEGIN
     declare stat varchar(20);
	 declare credit numeric;
	 set credit = (select sum(Amount) from Payments where customerNumber=cid);
     
      if credit>50000 then
          set stat='platinum';
      elseif (credit>=25000 and
			credit <=50000) then    
            set stat='gold';
       elseif credit <25000 then
             set stat='silver';
        end if;
        return (stat);
     END

select 103 as Cust_number, pur_stat(103) as purchase_status;

3.b select customers.customerNumber,customerName,
    case
     when amount < 25000 then 'silver'
     when amount between 25000 and 50000 then 'Gold'
     when amount > 50000 then 'Platinum'
     end as purchasestatus
     from payments
       inner join customers ON payments.customerNumber=customers.customerNumber;


4.CREATE DEFINER=`root`@`localhost` PROCEDURE `assignment3_proc3`(custNo int)
  BEGIN
  DECLARE credit DECIMAL(10,2) DEFAULT 0;
  DECLARE Update_condition CONDITION FOR SQLSTATE '22012';
  if (select 1
  from (
  select creditLimt,
  case
   when amount < 25000 then 'silver'
   when amount between 25000 and 50000 then 'Gold'
   when amount > 50000 then 'Platinum'
   end as purchasestatus,a.customerNumber from  payments a inner join customer b
  on a.customerNumber=b.customerNumber) as a
  where customerNumber=custNo and purchaseatatus='Platinum' and creditLimit<100000
  )=1 then
  update customers
  set creditlimit=100000
  where customerNumber=custNo;
  SIGNAL SQLSTATE'22012'
  SET MESSAGE_TEXT='credit is less than 100000';
  elseif
  (  select 1
  from (
  select creditLimit,
  case
   when amount <25000 then 'silver'
   when amount between 25000 and 50000 then 'Gold'
   when amount >50000 then 'Platinum'
   end as purchasestatus,a.customerNumber from payments a inner join customers b
  on a.customerNumber=b.customerNumber) as a
  where customerNumber=custNo and purchasestatus='silver' and creditLimit>60000
  )=1 then
  update customers
  set creditlimit=60000
  where customerNumber=custNo;
  SIGNAL SQLSTATE'22012'
  SET MESSAGE_TEXT='credit is less than 60000';
  end if;
  commit;
  END

CREATE DEFINER=`root`@`localhost` TRIGGER upd_cascade
AFTER UPDATE ON `movies`
FOR EACH ROW
BEGIN
update rentals set movieid = new.id
where movieid = old.id;
END;
-- On delete cascade
CREATE DEFINER=`root`@`localhost` TRIGGER del_cascade

AFTER DELETE ON `movies`
FOR EACH ROW
BEGIN
delete from rentals
where movieid = old.id;
END$$

delimiter ;
